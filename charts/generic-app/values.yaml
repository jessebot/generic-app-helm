# Default values for generic-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

deployment:
  # -- enable the deployment vs job vs cronjob
  enabled: true
  # -- replica count if not using autoscaling
  replicaCount: 1
  image:
    # -- docker registry if not using docker.io
    registry: "docker.io"
    # -- docker repo
    repository: nginx
    # -- image pull policy, set to Always if using latest and it changes frequently
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is latest
    tag: "latest"
  # -- optional image pull secrets
  imagePullSecrets: []
  # -- command to pass to docker container
  containerCommand: []
  # -- env list for deployment main container
  env: []
  # -- env from list for deployment main container
  envFrom: []
  # -- extra init containers for the default deployment
  initcontainers: {}
  # -- extra pod annotations for the deployment
  podAnnotations: {}
  # -- extra pod labels for the deployment
  podLabels: {}

  # -- pod securityContext deployment's main container
  podSecurityContext: {}
    # fsGroup: 2000

  # -- securityContext whole deployment
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # -- Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  # -- node selector for deployment
  nodeSelector: {}

  # -- tolerations of taints on a node
  tolerations: []

  # -- affinity settings for the deployment
  affinity: {}

  # -- resources for the deployment
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- livenessProbe for the deployment
  livenessProbe:
    enabled: true
    httpGet:
      path: /
      port: http

  # -- readinessProbe for the deployment
  readinessProbe:
    enabled: true
    httpGet:
      path: /
      port: http

  # -- autoscaling for the deployment
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

job:
  # -- enable a job
  enabled: false
  # -- replica count if not using autoscaling
  replicaCount: 1
  # -- restart policy if the job fails; can be never, or always
  restartPolicy: never
  image:
    # -- docker registry if not using docker.io
    registry: "docker.io"
    # -- docker repo
    repository: nginx
    # -- image pull policy, set to Always if using latest and it changes frequently
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is latest
    tag: "latest"
  # -- optional image pull secrets
  imagePullSecrets: []
  # -- command to pass to docker container
  containerCommand: []
  # -- env list for job main container
  env: []
  # -- env from list for job main container
  envFrom: []
  # -- extra init containers for the default job
  initcontainers: {}
  # -- extra pod annotations for the job
  podAnnotations: {}
  # -- extra pod labels for the job
  podLabels: {}

  # -- pod securityContext job's main container
  podSecurityContext: {}
    # fsGroup: 2000

  # -- securityContext whole job
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # -- Additional volumes on the output job definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- Additional volumeMounts on the output job definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  # -- node selector for job
  nodeSelector: {}

  # -- tolerations of taints on a node
  tolerations: []

  # -- affinity settings for the job
  affinity: {}

  # -- resources for the job
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  enabled: true
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
